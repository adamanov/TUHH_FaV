<launch>
    <arg name="est" default="ekf2" />
    <arg name="vehicle" default="uuv_bluerov2_heavy" />

    <!-- start the gazebo simulator and an empty world -->
    <include file="$(find bluerov_sim)/launch/gazebo_base.launch" />

    <!-- Spawn the vehicle. You can use the args to set the spawn pose-->
    <include file="$(find bluerov_sim)/launch/spawn_vehicle.launch">
        <!-- Set the position-->
        <arg name="x" value="1.0" />
        <arg name="y" value="1.0" />
        <arg name="z" value="-1.0" />
        -->
        <!-- Set roll, pitch, yaw-->
        <arg name="R" value="0.0" />
        <arg name="P" value="0.0" />
        <arg name="Y" value="1.5708" />
    </include>
    -->
    <!-- spawn tank and AprilTags -->
    <include file="$(find bluerov_sim)/launch/spawn_tank.launch"></include>

    <!-- launch the range_sensor -->
    <include file="$(find range_sensor)/launch/range_sensor.launch" />

    <!-- Launch the Nodes of Controller Main Pkg -->
    <node name="multiSetpointGenerator" pkg="controller_main" type="multiSetpoint_generator.py" output="screen" />

    <node name="main_controller" pkg="controller_main" type="main_controller.py" output="screen" />


    <param name="setpointPoseX" value="1" />
    <param name="setpointPoseY" value="1" />
    <param name="setpointPoseZ" value="-0.5" />

    <!-- required to get access to mixer actuator -->
    <node name="mixer" pkg="controller_main" type="mixer.py" output="screen" />


    <!-- Required for controlling gazebo -->
    <!--     <node name="keyboard" pkg="bluerov_sim" type="keyboard_control.py" output="screen" /> -->

    <!-- Required for localization -->
    <node name="depth_calculator" pkg="depth_controller" type="depth_calculator.py" output="screen" />

    <node name="localization_estimate" pkg="localization" type="localization_estimate.py" output="screen" />

    <node name="localization_error" pkg="localization" type="localization_error.py" output="screen" />

    <node name="range_averager" pkg="localization" type="range_averager.py" output="screen" />

    <node name="pose_reader" pkg="depth_controller" type="pose_reader.py" output="screen" />


    <!-- Kalman Filter for imporving localization prediction -->

    <node name="kalman_filter" pkg="localization" type="kalman_filter.py" output="screen" />


    <!-- Launch the PID Gain Controller Tool here -->
    <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" />

    <!-- PID Controller for thrust, required to define a input topic as thrust/setpoint
                                                                        thrust/state-->
    <node name="controller_thrust" pkg="pid" type="controller" ns="thrust" output="screen">
        <param name="Kp" value="7.5" />
        <param name="Ki" value="0.0012" />
        <param name="Kd" value="0.013" />
        <param name="upper_limit" value="10" />
        <param name="lower_limit" value="-10" />
        <param name="windup_limit_t" value="10" />
        <param name="max_loop_frequency" value="100.0" />
        <param name="min_loop_frequency" value="100.0" />
    </node>

    <!-- PID Controller for vertical_thrust required to define a input topic as  vertical_thrust/setpoint
                                                                                    vertical_thrust/state-->
    <node name="controller_vertical_thrust" pkg="pid" type="controller" ns="vertical_thrust" output="screen">
        <param name="Kp" value="3.5" />
        <param name="Ki" value="0.012" />
        <param name="Kd" value="0.5" />
        <param name="upper_limit" value="10" />
        <param name="lower_limit" value="-10" />
        <param name="windup_limit" value="10" />
        <param name="max_loop_frequency" value="100.0" />
        <param name="min_loop_frequency" value="100.0" />
    </node>
    <!-- PID Controller for lateral_thrust required to define a input topic as  lateral_thrust/setpoint
                                                                                lateral_thrust/state-->
    <node name="controller_lateral_thrust" pkg="pid" type="controller" ns="lateral_thrust" output="screen">
        <param name="Kp" value="13" />
        <param name="Ki" value="0.012" />
        <param name="Kd" value="0.005" />
        <param name="upper_limit" value="10" />
        <param name="lower_limit" value="-10" />
        <param name="windup_limit" value="10" />
        <param name="max_loop_frequency" value="100.0" />
        <param name="min_loop_frequency" value="100.0" />
    </node>

    <!-- PID Controller for orientation_Yaw required to define a input topic as  yaw/setpoint
                                                                                    yaw/state-->
    <node name="controller_yaw" pkg="pid" type="controller" ns="yaw" output="screen">
        <param name="Kp" value="10" />
        <param name="Ki" value="0.0" />
        <param name="Kd" value="0.0" />
        <param name="upper_limit" value="10" />
        <param name="lower_limit" value="-10" />
        <param name="windup_limit" value="10" />
        <param name="max_loop_frequency" value="100.0" />
        <param name="min_loop_frequency" value="100.0" />
    </node>

    <!-- PID Controller for pitch required to define a input topic as  pitch/setpoint
                                                                        pitch/state-->
    <node name="controller_pitch" pkg="pid" type="controller" ns="pitch" output="screen">
        <param name="Kp" value="7.5" />
        <param name="Ki" value="0.0012" />
        <param name="Kd" value="0.013" />
        <param name="upper_limit" value="10" />
        <param name="lower_limit" value="-10" />
        <param name="windup_limit" value="10" />
        <param name="max_loop_frequency" value="100.0" />
        <param name="min_loop_frequency" value="100.0" />
    </node>
    <!-- PID Controller for roll required to define a input topic as  roll/setpoint
                                                                        roll/state-->
    <node name="controller_roll" pkg="pid" type="controller" ns="roll" output="screen">
        <param name="Kp" value="7.5" />
        <param name="Ki" value="0.0012" />
        <param name="Kd" value="0.013" />
        <param name="upper_limit" value="10" />
        <param name="lower_limit" value="-10" />
        <param name="windup_limit" value="10" />
        <param name="max_loop_frequency" value="100.0" />
        <param name="min_loop_frequency" value="100.0" />
    </node>


    <!-- Play back data with rosbag -->
    <!-- <node pkg="rosbag" type="play" name="player" args="/home/sven/fav/bagfiles/2020-11-24-12-35-00.bag">
    </node> -->
    <!-- for rosbag -> rosbag record -a -->


</launch>
